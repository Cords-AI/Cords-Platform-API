#!/bin/bash
source ~/.secrets
set -ex

# Create Deployment
echo "Creating deployment..."
DEPLOYMENT_RESPONSE=$(curl -s -X POST \
  -H "Authorization: token $GITHUB_TOKEN" \
  -H "Accept: application/vnd.github+json" \
  https://api.github.com/repos/$GITHUB_REPOSITORY/deployments \
  -d @- <<EOF
{
  "ref": "$BRANCH_NAME",
  "environment": "$ENV_NAME",
  "required_contexts": []
}
EOF
)

# Extract Deployment ID
DEPLOYMENT_ID=$(echo "$DEPLOYMENT_RESPONSE" | jq -r '.id')

if [ -z "$DEPLOYMENT_ID" ] || [ "$DEPLOYMENT_ID" == "null" ]; then
  echo "Error: Failed to create deployment. Response: $DEPLOYMENT_RESPONSE"
  exit 1
fi

echo "Deployment created successfully. Deployment ID: $DEPLOYMENT_ID"

# Set Deployment Status
echo "Setting deployment status to success..."
STATUS_RESPONSE=$(curl -s -X POST \
  -H "Authorization: token $GITHUB_TOKEN" \
  -H "Accept: application/vnd.github+json" \
  https://api.github.com/repos/$GITHUB_REPOSITORY/deployments/$DEPLOYMENT_ID/statuses \
  -d @- <<EOF
{
  "state": "success",
  "environment": "$ENV_NAME",
  "environment_url": "$DEPLOYMENT_URL"
}
EOF
)

STATUS_STATE=$(echo "$STATUS_RESPONSE" | jq -r '.state')

if [ "$STATUS_STATE" != "success" ]; then
  echo "Error: Failed to set deployment status. Response: $STATUS_RESPONSE"
  exit 1
fi

echo "Deployment status set successfully."
